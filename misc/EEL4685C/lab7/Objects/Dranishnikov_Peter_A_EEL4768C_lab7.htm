<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Dranishnikov_Peter_A_EEL4768C_lab7.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Dranishnikov_Peter_A_EEL4768C_lab7.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Mar 22 20:47:08 2019
<BR><P>
<H3>Maximum Stack Usage =        128 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SysTick_Handler &rArr; JOY_GetKeys &rArr; IOE_Read &rArr; I2C_RdData &rArr; I2C_Read &rArr; WaitFlagSet
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[4a]">CAN2_RX0_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[4b]">CAN2_RX1_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[4c]">CAN2_SCE_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[49]">CAN2_TX_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[58]">DCMI_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[39]">DMA1_Stream7_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[42]">DMA2_Stream0_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream1_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream2_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream3_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream4_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream5_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream6_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream7_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[47]">ETH_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[48]">ETH_WKUP_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[59]">HASH_RNG_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[53]">I2C3_ER_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[52]">I2C3_EV_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[4d]">OTG_FS_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[34]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[55]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[54]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[57]">OTG_HS_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[56]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[5d]">Reset_Handler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from lab7.o(i.SysTick_Handler) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[5b]">SystemInit</a> from system_stm32f2xx.o(i.SystemInit) referenced from startup_stm32f207xx.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[40]">TIM6_DAC_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[36]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from lab7.o(i.USART3_IRQHandler) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[51]">USART6_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f207xx.o(.text) referenced from startup_stm32f207xx.o(RESET)
 <LI><a href="#[5c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f207xx.o(.text)
 <LI><a href="#[5a]">main</a> from lab7.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(.text)
</UL>
<P><STRONG><a name="[96]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[60]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[97]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[98]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[99]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[9a]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[9b]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[5d]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f207xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[9c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>FSMC_NORSRAM_Extended_Timing_Init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, stm32f2xx_ll_fsmc.o(i.FSMC_NORSRAM_Extended_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FSMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[76]"></a>FSMC_NORSRAM_Init</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32f2xx_ll_fsmc.o(i.FSMC_NORSRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FSMC_NORSRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[77]"></a>FSMC_NORSRAM_Timing_Init</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, stm32f2xx_ll_fsmc.o(i.FSMC_NORSRAM_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FSMC_NORSRAM_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[61]"></a>GLCD_ClearScreen</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, glcd_mcbstm32f200.o(i.GLCD_ClearScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GLCD_ClearScreen &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>GLCD_DrawChar</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, glcd_mcbstm32f200.o(i.GLCD_DrawChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GLCD_DrawChar &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_reaction
</UL>

<P><STRONG><a name="[66]"></a>GLCD_Initialize</STRONG> (Thumb, 1838 bytes, Stack size 64 bytes, glcd_mcbstm32f200.o(i.GLCD_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GLCD_Initialize &rArr; HAL_SRAM_Init &rArr; FSMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>GLCD_SetBackgroundColor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, glcd_mcbstm32f200.o(i.GLCD_SetBackgroundColor))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>GLCD_SetFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, glcd_mcbstm32f200.o(i.GLCD_SetFont))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[69]"></a>HAL_Delay</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, stm32f2xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
</UL>

<P><STRONG><a name="[67]"></a>HAL_GPIO_Init</STRONG> (Thumb, 476 bytes, Stack size 24 bytes, stm32f2xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
</UL>

<P><STRONG><a name="[6b]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f2xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
</UL>

<P><STRONG><a name="[6c]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f2xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>

<P><STRONG><a name="[8c]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f2xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[6d]"></a>HAL_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f2xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>HAL_InitTick</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f2xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[70]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f2xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[72]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, stm32f2xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[6e]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f2xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[68]"></a>HAL_SRAM_Init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32f2xx_hal_sram.o(i.HAL_SRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_SRAM_Init &rArr; FSMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_MspInit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAM_Timing_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAM_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAM_Extended_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
</UL>

<P><STRONG><a name="[75]"></a>HAL_SRAM_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f2xx_hal_sram.o(i.HAL_SRAM_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SRAM_Init
</UL>

<P><STRONG><a name="[71]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32f2xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[79]"></a>I2C_Addr</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, i2c_stm32f2xx.o(i.I2C_Addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_Addr &rArr; WaitFlagSet
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitFlagSet
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WrData
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RdData
</UL>

<P><STRONG><a name="[85]"></a>I2C_Init</STRONG> (Thumb, 218 bytes, Stack size 0 bytes, i2c_stm32f2xx.o(i.I2C_Init))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Recovery
</UL>

<P><STRONG><a name="[7b]"></a>I2C_RdData</STRONG> (Thumb, 196 bytes, Stack size 56 bytes, i2c_stm32f2xx.o(i.I2C_RdData))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = I2C_RdData &rArr; I2C_Read &rArr; WaitFlagSet
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Recovery
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Addr
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Read
</UL>

<P><STRONG><a name="[7e]"></a>I2C_Read</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, i2c_stm32f2xx.o(i.I2C_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_Read &rArr; WaitFlagSet
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitFlagSet
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RdData
</UL>

<P><STRONG><a name="[80]"></a>I2C_Recovery</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, i2c_stm32f2xx.o(i.I2C_Recovery))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_Recovery
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_state
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_pin
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dir
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WrData
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RdData
</UL>

<P><STRONG><a name="[7c]"></a>I2C_Start</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, i2c_stm32f2xx.o(i.I2C_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_Start &rArr; WaitFlagSet
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitFlagSet
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WrData
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RdData
</UL>

<P><STRONG><a name="[7f]"></a>I2C_Stop</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, i2c_stm32f2xx.o(i.I2C_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_Stop &rArr; WaitFlagClr
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitFlagClr
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WrData
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RdData
</UL>

<P><STRONG><a name="[87]"></a>I2C_WrData</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, i2c_stm32f2xx.o(i.I2C_WrData))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = I2C_WrData &rArr; I2C_Addr &rArr; WaitFlagSet
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Recovery
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Addr
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Write
</UL>

<P><STRONG><a name="[7d]"></a>I2C_Write</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, i2c_stm32f2xx.o(i.I2C_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_Write &rArr; WaitFlagSet
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitFlagSet
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WrData
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RdData
</UL>

<P><STRONG><a name="[8a]"></a>JOY_GetKeys</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, joy.o(i.JOY_GetKeys))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = JOY_GetKeys &rArr; IOE_Read &rArr; I2C_RdData &rArr; I2C_Read &rArr; WaitFlagSet
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[8b]"></a>JOY_Init</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, joy.o(i.JOY_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = JOY_Init &rArr; IOE_Write &rArr; I2C_WrData &rArr; I2C_Addr &rArr; WaitFlagSet
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOE_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>SER_GetChar</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, serial.o(i.SER_GetChar))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[92]"></a>SER_Init</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, serial.o(i.SER_Init))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>SER_PutChar</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, serial.o(i.SER_PutChar))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_reaction
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lab7.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SysTick_Handler &rArr; JOY_GetKeys &rArr; IOE_Read &rArr; I2C_RdData &rArr; I2C_Read &rArr; WaitFlagSet
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_reaction
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JOY_GetKeys
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, system_stm32f2xx.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>SystemInit</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, system_stm32f2xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lab7.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USART3_IRQHandler &rArr; fsm_reaction &rArr; GLCD_DrawChar &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_GetChar
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_reaction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f207xx.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[9e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[9f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[8d]"></a>fsm_reaction</STRONG> (Thumb, 644 bytes, Stack size 16 bytes, lab7.o(i.fsm_reaction))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = fsm_reaction &rArr; GLCD_DrawChar &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_PutChar
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[81]"></a>io_dir</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, i2c_stm32f2xx.o(i.io_dir))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Recovery
</UL>

<P><STRONG><a name="[82]"></a>io_pin</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, i2c_stm32f2xx.o(i.io_pin))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Recovery
</UL>

<P><STRONG><a name="[84]"></a>io_state</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, i2c_stm32f2xx.o(i.io_state))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Recovery
</UL>

<P><STRONG><a name="[5a]"></a>main</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, lab7.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = main &rArr; JOY_Init &rArr; IOE_Write &rArr; I2C_WrData &rArr; I2C_Addr &rArr; WaitFlagSet
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SER_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetFont
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetBackgroundColor
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_ClearScreen
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fsm_reaction
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JOY_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[8f]"></a>I2C_sr</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, i2c_stm32f2xx.o(i.I2C_sr))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitFlagSet
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitFlagClr
</UL>

<P><STRONG><a name="[83]"></a>Wait</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, i2c_stm32f2xx.o(i.Wait))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Recovery
</UL>

<P><STRONG><a name="[86]"></a>WaitFlagClr</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, i2c_stm32f2xx.o(i.WaitFlagClr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WaitFlagClr
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
</UL>

<P><STRONG><a name="[7a]"></a>WaitFlagSet</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, i2c_stm32f2xx.o(i.WaitFlagSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WaitFlagSet
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_sr
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Write
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Addr
</UL>

<P><STRONG><a name="[88]"></a>IOE_Read</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, joy.o(i.IOE_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = IOE_Read &rArr; I2C_RdData &rArr; I2C_Read &rArr; WaitFlagSet
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RdData
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JOY_GetKeys
</UL>

<P><STRONG><a name="[89]"></a>IOE_Write</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, joy.o(i.IOE_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = IOE_Write &rArr; I2C_WrData &rArr; I2C_Addr &rArr; WaitFlagSet
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WrData
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JOY_Init
</UL>

<P><STRONG><a name="[62]"></a>GLCD_SetWindow</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, glcd_mcbstm32f200.o(i.GLCD_SetWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_ClearScreen
</UL>

<P><STRONG><a name="[63]"></a>wr_cmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, glcd_mcbstm32f200.o(i.wr_cmd))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_ClearScreen
</UL>

<P><STRONG><a name="[95]"></a>wr_dat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, glcd_mcbstm32f200.o(i.wr_dat))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
</UL>

<P><STRONG><a name="[64]"></a>wr_dat_only</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, glcd_mcbstm32f200.o(i.wr_dat_only))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_ClearScreen
</UL>

<P><STRONG><a name="[6a]"></a>wr_reg</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, glcd_mcbstm32f200.o(i.wr_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetWindow
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
</UL>

<P><STRONG><a name="[73]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f2xx_hal_cortex.o(i.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[74]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f2xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
